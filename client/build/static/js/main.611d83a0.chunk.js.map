{"version":3,"sources":["Squidnet_logo.png","common/img/squidlogo_see_through.png","common/components/SquidHeader.js","core/networking/index.js","core/websocket/index.js","App.js","reportWebVitals.js","index.js"],"names":["SquidHeader","Menu","fixed","pointing","size","style","backgroundColor","Image","src","Logo","marginTop","Header","as","inverted","NetworkPage","Segment","Websocker","useState","image","setImage","socket","SocketIOClient","on","console","log","response","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLAAe,I,kHCAA,MAA0B,kDCwB1BA,MAff,WAEI,OACI,eAACC,EAAA,EAAD,CACIC,MAAM,MACNC,UAAQ,EACRC,KAAK,QACLC,MAAO,CAAEC,gBAAiB,WAJ9B,UAMI,cAACC,EAAA,EAAD,CAAOC,IAAKC,EAAML,KAAK,OAAOC,MAAO,CAAEK,UAAW,SAClD,cAACC,EAAA,EAAD,CAAQC,GAAG,KAAKC,UAAQ,EAAxB,+BCGGC,MAbf,WAEI,OACI,gCACI,cAAC,EAAD,IAEA,cAACC,EAAA,EAAD,CAASV,MAAO,CAAEK,UAAW,QAA7B,SACI,cAACC,EAAA,EAAD,wF,kBCSDK,MAtBf,WAAqB,IAAD,EAEUC,mBAAS,IAFnB,mBAETC,EAFS,KAEFC,EAFE,KAIZC,EAASC,IAAe,yBAW5B,OATAD,EAAOE,GAAG,WAAW,WACjBC,QAAQC,IAAI,WAGhBJ,EAAOE,GAAG,iBAAiB,SAAAG,GACvBF,QAAQC,IAAIC,GACZN,EAASM,MAIT,8BACI,qBAAKjB,IAAK,yBAA2BU,OCQlCQ,MAhBf,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,cAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,aAAlB,SACE,cAAC,EAAD,YCRKE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.611d83a0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Squidnet_logo.1642d5c8.png\";","export default __webpack_public_path__ + \"static/media/squidlogo_see_through.19d08bca.png\";","import React from \"react\"\r\nimport {\r\n    Header,\r\n    Menu,\r\n    Image,\r\n} from 'semantic-ui-react'\r\n\r\nimport Logo from '../img/squidlogo_see_through.png'\r\n\r\nfunction SquidHeader() {\r\n\r\n    return (\r\n        <Menu\r\n            fixed='top'\r\n            pointing\r\n            size='large'\r\n            style={{ backgroundColor: '#00A3FF' }}\r\n        >\r\n            <Image src={Logo} size='tiny' style={{ marginTop: '4px' }} />\r\n            <Header as='h1' inverted>Squidnet.tech</Header>\r\n        </Menu>\r\n    )\r\n}\r\n\r\nexport default SquidHeader","import React from \"react\"\r\nimport {\r\n    Header,\r\n    Segment\r\n} from 'semantic-ui-react'\r\n\r\nimport SquidHeader from \"../../common/components/SquidHeader\"\r\n\r\n\r\nfunction NetworkPage() {\r\n\r\n    return (\r\n        <div>\r\n            <SquidHeader />\r\n\r\n            <Segment style={{ marginTop: '90px' }}>\r\n                <Header>How many tickles does it take to get a squid to laugh? Ten Tickles!</Header>\r\n            </Segment>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NetworkPage","import React, { useState } from 'react'\r\nimport SocketIOClient from 'socket.io-client'\r\n\r\nfunction Websocker(){\r\n\r\n    const [image, setImage] = useState('')\r\n\r\n    var socket = SocketIOClient('http://127.0.0.1:5000')\r\n\r\n    socket.on('connect', () => {\r\n        console.log('HYPR')\r\n    })\r\n\r\n    socket.on('receive_image', response => { \r\n        console.log(response) \r\n        setImage(response)\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <img src={\"data:image/png;base64,\" + image} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Websocker","import logo from './Squidnet_logo.png';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from 'react-router-dom'\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport HomePage from \"./core/homepage\"\r\nimport NetworkPage from './core/networking';\r\nimport Websocker from './core/websocket';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path='/networking'>\r\n          <NetworkPage />\r\n        </Route>\r\n        <Route exact path=\"/websocket\">\r\n          <Websocker />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}